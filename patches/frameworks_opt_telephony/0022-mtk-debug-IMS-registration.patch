From 37d777ab9c0af359f568de9c39621fd1a4674449 Mon Sep 17 00:00:00 2001
From: Wang Xuerui <idontknw.wang@gmail.com>
Date: Mon, 4 Apr 2016 13:50:07 +0800
Subject: [PATCH] mtk: debug IMS registration

Change-Id: I5f1c13529f1329d96f6198230187e96e46ce54a3
---
 .../internal/telephony/ServiceStateTracker.java    |  7 +++++
 .../telephony/gsm/GsmServiceStateTracker.java      | 35 ++++++++++++++++++++++
 2 files changed, 42 insertions(+)

diff --git a/src/java/com/android/internal/telephony/ServiceStateTracker.java b/src/java/com/android/internal/telephony/ServiceStateTracker.java
index 88f1c14d74..3d3ef3b597 100644
--- a/src/java/com/android/internal/telephony/ServiceStateTracker.java
+++ b/src/java/com/android/internal/telephony/ServiceStateTracker.java
@@ -186,6 +186,13 @@
     protected static final int EVENT_IMS_CAPABILITY_CHANGED            = 48;
     protected static final int EVENT_RADIO_POWER_OFF_DONE                  = 49;
 
+    // MTK events
+    // MTK TODO
+    protected static final int EVENT_SET_IMS_ENABLED_DONE = 109;
+    protected static final int EVENT_SET_IMS_DISABLE_DONE = 110;
+    protected static final int EVENT_IMS_DISABLED_URC = 111;
+    protected static final int EVENT_IMS_REGISTRATION_INFO = 112;
+
     protected static final String TIMEZONE_PROPERTY = "persist.sys.timezone";
 
     /**
diff --git a/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java b/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
index fcbf0eeb6b..98554f9779 100644
--- a/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
+++ b/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java
@@ -226,6 +226,11 @@ public GsmServiceStateTracker(GSMPhone phone) {
         mCi.setOnNITZTime(this, EVENT_NITZ_TIME, null);
         mCi.setOnRestrictedStateChanged(this, EVENT_RESTRICTED_STATE_CHANGED, null);
 
+        if (SystemProperties.get("ro.mtk_ims_support").equals("1")) {
+            // mCi.registerForImsDisable(this, EVENT_IMS_DISABLED_URC, null);  // completely unused
+            mCi.registerForImsRegistrationInfo(this, EVENT_IMS_REGISTRATION_INFO, null);
+        }
+
         // system setting property AIRPLANE_MODE_ON is set in Settings.
         int airplaneMode = Settings.Global.getInt(
                 phone.getContext().getContentResolver(),
@@ -275,6 +280,11 @@ public void dispose() {
         if (mIccRecords != null) {mIccRecords.unregisterForRecordsLoaded(this);}
         mCi.unSetOnRestrictedStateChanged(this);
         mCi.unSetOnNITZTime(this);
+        // xen0n: MTK forgot to unregister this
+        if (SystemProperties.get("ro.mtk_ims_support").equals("1")) {
+            // mCi.unregisterForImsDisable(this);  // completely unused
+            mCi.unregisterForImsRegistrationInfo(this);
+        }
         mCr.unregisterContentObserver(mAutoTimeObserver);
         mCr.unregisterContentObserver(mAutoTimeZoneObserver);
         mPhone.getContext().unregisterReceiver(mIntentReceiver);
@@ -506,6 +516,31 @@ public void handleMessage (Message msg) {
                 updateSpnDisplay();
                 break;
 
+            // MTK
+            // seems totally useless besides debug purposes... but let's debug it anyway
+            case EVENT_IMS_REGISTRATION_INFO:
+                // xen0n: don't pollute namespace with otherwise unused variables
+                int mImsRegInfo = -1;
+                int mImsExtInfo = -1;
+
+                log("handle EVENT_IMS_REGISTRATION_INFO");
+                ar = (AsyncResult) msg.obj;
+                /// M: Simulate IMS Registration @{
+                /*
+                if (SystemProperties.getInt("persist.ims.simulate", 0) == 1) {
+                    ((int[]) ar.result)[0] = (mImsRegistry ? 1 : 0);
+                    log("Override EVENT_IMS_REGISTRATION_INFO: new mImsRegInfo=" +
+                            ((int[]) ar.result)[0]);
+                }
+                */
+                /// @}
+                mImsRegInfo = ((int[]) ar.result)[0];  // xen0n
+                if (((int[]) ar.result)[1] > 0) {
+                    mImsExtInfo = ((int[]) ar.result)[1];
+                }
+                log("ImsRegistrationInfoResult [" + mImsRegInfo + ", " + mImsExtInfo + "]");
+                break;
+
             default:
                 super.handleMessage(msg);
             break;
