From 64a4da7127b961adb1c27b4dd5fa32ef3e070f30 Mon Sep 17 00:00:00 2001
From: Wang Xuerui <idontknw.wang@gmail.com>
Date: Wed, 6 Jan 2016 15:42:16 +0800
Subject: [PATCH] ProximitySensorManager: add MTK/Meizu proximity/tap-to-wake
 workaround

Change-Id: Ic8c03ce06ef818f441cabfbb151253da5ea14c77
---
 src/com/android/server/telecom/ProximitySensorManager.java | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/src/com/android/server/telecom/ProximitySensorManager.java b/src/com/android/server/telecom/ProximitySensorManager.java
index 5fddb89b1..10a0f540a 100644
--- a/src/com/android/server/telecom/ProximitySensorManager.java
+++ b/src/com/android/server/telecom/ProximitySensorManager.java
@@ -18,6 +18,7 @@
 
 import android.content.Context;
 import android.os.PowerManager;
+import android.os.SystemProperties;
 
 /**
  * This class manages the proximity sensor and allows callers to turn it on and off.
@@ -28,6 +29,9 @@
     private final PowerManager.WakeLock mProximityWakeLock;
     private final CallsManager mCallsManager;
 
+    // MTK workaround
+    private static final boolean mIsMTKHardware = !(SystemProperties.get("ro.mediatek.platform", "").equals(""));
+
     public ProximitySensorManager(Context context, CallsManager callsManager) {
         PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
 
@@ -46,7 +50,11 @@ public ProximitySensorManager(Context context, CallsManager callsManager) {
     public void onCallRemoved(Call call) {
         if (mCallsManager.getCalls().isEmpty()) {
             Log.i(this, "All calls removed, resetting proximity sensor to default state");
-            turnOff(true);
+
+            // MTK has screenOnImmediately set to false, at least on Meizu MX4
+            // passing true would result in tap-to-wake or proximity sensor
+            // stopping working if remote hung up.
+            turnOff(!mIsMTKHardware);
         }
         super.onCallRemoved(call);
     }
